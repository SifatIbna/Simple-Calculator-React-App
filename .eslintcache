[{"T:\\WorkSpace\\Developing\\React\\my-app\\src\\index.js":"1","T:\\WorkSpace\\Developing\\React\\my-app\\src\\reportWebVitals.js":"2","T:\\WorkSpace\\Developing\\React\\my-app\\src\\App.js":"3","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\MultiState.js":"4","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\NewTest.js":"5","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Test.js":"6","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Calc.js":"7","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Btn.js":"8","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Shifu.js":"9"},{"size":686,"mtime":1610604997434,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":587,"mtime":1610560247074,"results":"13","hashOfConfig":"11"},{"size":948,"mtime":1610545432545,"results":"14","hashOfConfig":"11"},{"size":185,"mtime":1610545942230,"results":"15","hashOfConfig":"11"},{"size":311,"mtime":1610546474310,"results":"16","hashOfConfig":"11"},{"size":2744,"mtime":1610560207612,"results":"17","hashOfConfig":"11"},{"size":822,"mtime":1610556838081,"results":"18","hashOfConfig":"11"},{"size":1692,"mtime":1610606824216,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6mzmm3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"T:\\WorkSpace\\Developing\\React\\my-app\\src\\index.js",["44","45"],"T:\\WorkSpace\\Developing\\React\\my-app\\src\\reportWebVitals.js",[],["46","47"],"T:\\WorkSpace\\Developing\\React\\my-app\\src\\App.js",["48"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {\n        /* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */\n        <h1>Simple Calculator</h1>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\MultiState.js",[],["49","50"],"T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\NewTest.js",[],"T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Test.js",["51"],"import React,{useState} from 'react';\r\nimport NewTest from \"./NewTest\";\r\n// import  from \"react/cjs/react.production.min\";\r\n\r\nconst Test = () => {\r\n\r\n    var [str,setStr] = useState(\"Yo MAN!!\")\r\n    return (\r\n        <div>\r\n            <NewTest str = {str} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Calc.js",["52","53","54"],"import React, {useState} from 'react';\r\nimport Btn from \"./Btn\";\r\n\r\nconst Calc = () => {\r\n    const list = []\r\n    let [display_val, changeDisplayVal] = useState(\"\")\r\n    let [operator, changeOperator] = useState(\"\")\r\n    // let [temp, changeTemp] = useState(0)\r\n    let [firstVal, changeFirstVal] = useState(\"\")\r\n    let [secondVal, changeSecondVal] = useState(\"\")\r\n    let result = 0;\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n\r\n        list.push(i)\r\n    }\r\n\r\n\r\n    /**\r\n     Buidling a Simple Calculator\r\n     And showing three buttons per row.\r\n     **/\r\n\r\n    return <div>\r\n        {display_val ? display_val:\"0\"}\r\n        {\r\n\r\n            list\r\n                .slice(0, 9)\r\n                .map((value, index) => {\r\n\r\n                    if (index % 3 === 0 && list.length - index >= 3) { /** Checking if the index and remaining values is greater than\r\n                     Three **/\r\n\r\n                        /**\r\n                         * Though It could have been achieved by doing simple <br> tag\r\n                         * but why not make things complicated :P\r\n                         */\r\n                        return <Btn list={list} index={index} display_val={display_val}\r\n                                    changeDisplayVal={changeDisplayVal}/>\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n        <button onClick={function () {\r\n            changeDisplayVal(display_val + list[list.length - 1])\r\n        }}>\r\n            {list[list.length - 1]}\r\n        </button>\r\n        <button onClick={function () {\r\n\r\n            changeDisplayVal(display_val+\" \")\r\n            changeOperator(\"+\")\r\n        }\r\n        }>\r\n            +\r\n        </button>\r\n        <button onClick={function () {\r\n\r\n            changeDisplayVal(display_val+\" \")\r\n\r\n            changeOperator(\"-\")\r\n\r\n        }\r\n        }>\r\n            -\r\n        </button>\r\n        <br/>\r\n        <button onClick={function () {\r\n\r\n            if (operator === \"+\") {\r\n\r\n                const vals = display_val.split(\" \")\r\n\r\n                firstVal = parseInt(vals[0])\r\n                secondVal = parseInt((vals[1]))\r\n\r\n                result = firstVal+secondVal\r\n                changeDisplayVal(\"Result = \"+result)\r\n\r\n            } else {\r\n                const vals = display_val.split(\" \")\r\n\r\n                firstVal = parseInt(vals[0])\r\n                secondVal = parseInt((vals[1]))\r\n\r\n\r\n\r\n                result = firstVal-secondVal\r\n                changeDisplayVal(\"Result = \"+result)\r\n\r\n\r\n            }\r\n        }\r\n        }>\r\n            =\r\n        </button>\r\n\r\n        <button onClick={function (){\r\n            changeDisplayVal(\"\")\r\n        }}>\r\n            AC\r\n        </button>\r\n        <br/>\r\n\r\n    </div>;\r\n}\r\n\r\nexport default Calc;","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Btn.js",["55"],"import React from 'react';\r\n\r\nconst Btn = (vals) => {\r\n    let {list,index,display_val,changeDisplayVal} = vals;\r\n\r\n    const new_list = []\r\n    for (let i=index;i<=index+3;i++){\r\n        new_list.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={function (){\r\n                changeDisplayVal(display_val+new_list[0])\r\n            }}>\r\n                {new_list[0]}\r\n            </button>\r\n\r\n            <button onClick={function (){\r\n                changeDisplayVal(display_val+new_list[1])\r\n            }}>\r\n                {new_list[1]}\r\n            </button>\r\n\r\n            <button onClick={function (){\r\n                changeDisplayVal(display_val+new_list[2])\r\n            }}>\r\n                {new_list[2]}\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Btn;","T:\\WorkSpace\\Developing\\React\\my-app\\src\\component\\Shifu.js",["56"],{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":12},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"62","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"57","severity":1,"message":"69","line":7,"column":14,"nodeType":"59","messageId":"60","endLine":7,"endColumn":20},{"ruleId":"57","severity":1,"message":"70","line":9,"column":20,"nodeType":"59","messageId":"60","endLine":9,"endColumn":34},{"ruleId":"57","severity":1,"message":"71","line":10,"column":21,"nodeType":"59","messageId":"60","endLine":10,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":30,"column":37,"nodeType":"74","messageId":"75","endLine":30,"endColumn":39},{"ruleId":"57","severity":1,"message":"76","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"77","line":30,"column":11,"nodeType":"59","messageId":"60","endLine":30,"endColumn":14},"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Calc' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'logo' is defined but never used.",["78"],["79"],"'setStr' is assigned a value but never used.","'changeFirstVal' is assigned a value but never used.","'changeSecondVal' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'list' is assigned a value but never used.","'css' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]